
#ifndef _CLASS_JACOBIAN
#define _CLASS_JACOBIAN

#include "MatrixDefs.h"

class Tree;

class Jacobian {

public:
	 Jacobian(const Tree& tree);
	~Jacobian();

public:
	void  SetJacobian(Eigen::MatrixXd& jacobian);
	void  Compute(const Tree& tree);
	const Eigen::MatrixXd& GetNullspace();
	const Eigen::MatrixXd& GetJacobian();
		  Eigen::MatrixXd& GetJacobianEdit();
	const Eigen::MatrixXd& GetJacobianInverse();
	const Eigen::Matrix3d& GetJacobianProduct();
	const Eigen::Matrix3d& GetJacobianProductInverse();

private:
	void ComputeSVD();

private:
	bool computeInverse_;
	bool computeProduct_;
	bool computeProductInverse_;
	bool computeJacSVD_;
	bool computeNullSpace_;

private:
	Eigen::Matrix3d jacobianProductInverse_;
	Eigen::Matrix3d jacobianProduct_;
	Eigen::MatrixXd jacobian_;
	Eigen::MatrixXd jacobianInverse_;
	Eigen::MatrixXd Identitymin_;
	Eigen::JacobiSVD<Eigen::Matrix3d> svd_;
	//Eigen::JacobiSVD<Eigen::Matrix3d> svdInv_;
};
#endif //_CLASS_JACOBIAN