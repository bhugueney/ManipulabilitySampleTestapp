
#ifndef _CLASS_WORLDMANAGERI
#define _CLASS_WORLDMANAGERI

#include "Exports.h"

namespace manip_core
{
struct RobotI;
struct PostureManagerI;

namespace enums
{
namespace robot
{
	enum eRobots
	{ 
		Human = 0,
		Quadruped,
		UnknownRobot
	};
} // namespace enums
} // namespace robot
struct MANIPCORE_API WorldManagerI
{
	/** Deletes the current WorldManagerI.
	*/
	virtual void Release() = 0;
	/**	Creates a planar obstacle. Points must be indicated clockwise from upLeft and be in a plan.
	 */
	virtual void AddObstacle(double* /*upLeft*/, double* /*upRight*/, double* /*downRight*/, double* /*downLeft*/)= 0;
	/**	Creates a pre-existing robot.
	 */
	virtual const RobotI* CreateRobot(enums::robot::eRobots /*robotType*/, double* /*transform*/) = 0;
	/** Once all obstacles have been created, instantiate world.
	*/
	virtual void Initialize() = 0;
	/**
	*/
	virtual PostureManagerI* GetPostureManager() = 0;
};

extern "C" MANIPCORE_API WorldManagerI* GetWorldManager();

} // namespace manip_core
#endif //_CLASS_WORLDMANAGERI