
#include "DrawSamples.h"
#include "MatrixDefs.h"
#include "Simulation.h"

#include "API/RobotI.h"
#include "API/TreeI.h"
#include "API/JointI.h"
#include "Pi.h"

#include <drawstuff/drawstuff.h> // The drawing library for ODE;

using namespace matrices;
using namespace manip_core;

namespace matrices
{
	const Vector3 unitz(0,0,1);
}

DrawSamples::DrawSamples(const manip_core::RobotI* robot, const manip_core::TreeI* tree)
{
	Simulation::GetInstance()->postureManager_->VisitSamples(robot, tree, this);
}



DrawSamples::~DrawSamples()
{
	for(T_Tree::iterator it = trees_.begin(); it!= trees_.end(); ++it)
	{
		(*it)->Release();
	}
}

void DrawSamples::Visit(const manip_core::RobotI* robot, manip_core::TreeI* tree)
{
	trees_.push_back(tree);
	drawTrees_.push_back(DrawTree(tree));
}


void DrawSamples::Draw(const matrices::Matrix4& currentTransform, bool transparency) const
{
	for(T_DrawTree::const_iterator it = drawTrees_.begin(); it!= drawTrees_.end(); ++it)
	{
		(*it).Draw(currentTransform, transparency);
	}
}



